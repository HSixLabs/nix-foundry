package config

import (
	"fmt"

	"github.com/shawnkhoffman/nix-foundry/pkg/platform"
	"gopkg.in/yaml.v3"
)

func GenerateDefaultConfig(sys platform.System) ([]byte, error) {
	config := NixConfig{
		Version: "1.0",
		Shell: ShellConfig{
			Type: "zsh",
		},
		Editor: EditorConfig{
			Type: "nano",
		},
		Git: GitConfig{
			Enable: true,
		},
		Packages: PackagesConfig{
			Additional: []string{},
			PlatformSpecific: map[string][]string{
				"darwin": {"mas"},
				"linux":  {"inotify-tools"},
			},
			Development: []string{
				"git",
				"ripgrep",
				"fd",
				"jq",
			},
			Team: map[string][]string{},
		},
		Team: TeamConfig{
			Enable:   false,
			Settings: map[string]string{},
		},
		Platform: PlatformConfig{
			OS:   sys.OS,
			Arch: sys.Arch,
		},
	}

	data, err := yaml.Marshal(config)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal default config: %w", err)
	}

	header := []byte(`# Default Development Environment Configuration
# Generated by nix-foundry

`)
	return append(header, data...), nil
}
