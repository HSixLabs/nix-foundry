{ config, pkgs, lib, ... }:

{
  xdg.configFile."zsh/.p10k.zsh".text = ''
    # Generated by Powerlevel10k configuration wizard on 2023-01-07 at 19:55 CST.
    # Based on romkatv/powerlevel10k/config/p10k-lean.zsh, checksum 30611.
    # Wizard options: nerdfont-complete + powerline, small icons, unicode, lean, 12h time,
    # 2 lines, disconnected, left frame, dark-ornaments, sparse, many icons, concise,
    # instant_prompt=verbose.
    # Type `p10k configure` to generate another config.
    #
    # Config for Powerlevel10k with lean prompt style. Type `p10k configure` to generate
    # your own config based on it.
    #
    # Tip: Looking for a nice color? Here's a one-liner to print colormap.
    #
    #   for i in {0..255}; do print -Pn "%K{$i}  %k%F{$i}''${(l:3::0:)i}%f " ''${''${(M)$((i%6)):#3}:+$'\n'}; done

    # Temporarily change options.
    'builtin' 'local' '-a' 'p10k_config_opts'
    [[ ! -o 'aliases'         ]] || p10k_config_opts+=('aliases')
    [[ ! -o 'sh_glob'         ]] || p10k_config_opts+=('sh_glob')
    [[ ! -o 'no_brace_expand' ]] || p10k_config_opts+=('no_brace_expand')
    'builtin' 'setopt' 'no_aliases' 'no_sh_glob' 'brace_expand'

    () {
      emulate -L zsh -o extended_glob

      # Unset all configuration options. This allows you to apply configuration changes without
      # restarting zsh. Edit ~/.p10k.zsh and type `source ~/.p10k.zsh`.
      unset -m '(POWERLEVEL9K_*|DEFAULT_USER)~POWERLEVEL9K_GITSTATUS_DIR'

      # Zsh >= 5.1 is required.
      [[ $ZSH_VERSION == (5.<1->*|<6->.*) ]] || return

      # The list of segments shown on the left. Fill it with the most important segments.
      typeset -g POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(
        # =========================[ Line #1 ]=========================
        os_icon                 # os identifier
        dir                     # current directory
        vcs                     # git status
        # =========================[ Line #2 ]=========================
        newline                 # \n
        prompt_char             # prompt symbol
      )

      # The list of segments shown on the right. Fill it with less important segments.
      # Right prompt on the last prompt line (where you are typing your commands) gets
      # automatically hidden when the input line reaches it. Right prompt above the
      # last prompt line gets hidden if it would overlap with left prompt.
      typeset -g POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(
        status
        command_execution_time
        background_jobs
        direnv
        asdf
        virtualenv
        anaconda
        pyenv
        goenv
        nodenv
        nvm
        nodeenv
        rbenv
        rvm
        jenv
        luaenv
        plenv
        phpenv
        scalaenv
        haskell_stack
        kubecontext
        terraform
        aws
        aws_eb_env
        azure
        gcloud
        google_app_cred
        context
        nordvpn
        ranger
        nnn
        vim_shell
        midnight_commander
        nix_shell
        vi_mode
        todo
        timewarrior
        taskwarrior
        time
      )

      # When set to true, icons appear before content on both sides of the prompt. When set
      # to false, icons go after content. If empty or not set, icons go before content in the left
      # prompt and after content in the right prompt.
      #
      # You can also override it for a specific segment:
      #
      #   POWERLEVEL9K_STATUS_ICON_BEFORE_CONTENT=false
      #
      # Or for a specific segment in specific state:
      #
      #   POWERLEVEL9K_DIR_NOT_WRITABLE_ICON_BEFORE_CONTENT=false
      typeset -g POWERLEVEL9K_ICON_BEFORE_CONTENT=true

      # Add an empty line before each prompt.
      typeset -g POWERLEVEL9K_PROMPT_ADD_NEWLINE=true

      # Connect left prompt lines with these symbols.
      typeset -g POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX='%240F╭─'
      typeset -g POWERLEVEL9K_MULTILINE_NEWLINE_PROMPT_PREFIX='%240F├─'
      typeset -g POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX='%240F╰─'
      # Connect right prompt lines with these symbols.
      typeset -g POWERLEVEL9K_MULTILINE_FIRST_PROMPT_SUFFIX=
      typeset -g POWERLEVEL9K_MULTILINE_NEWLINE_PROMPT_SUFFIX=
      typeset -g POWERLEVEL9K_MULTILINE_LAST_PROMPT_SUFFIX=

      # The left end of left prompt.
      typeset -g POWERLEVEL9K_LEFT_PROMPT_FIRST_SEGMENT_START_SYMBOL=
      # The right end of right prompt.
      typeset -g POWERLEVEL9K_RIGHT_PROMPT_LAST_SEGMENT_END_SYMBOL=

      # Defines character set used by powerlevel10k. It's best to let `p10k configure` set it for you.
      typeset -g POWERLEVEL9K_MODE=nerdfont-complete
      # When set to `moderate`, some icons will have an extra space after them. This is meant to avoid
      # icon overlap when using non-monospace fonts. When set to `none`, spaces are not added.
      typeset -g POWERLEVEL9K_ICON_PADDING=none

      # Basic style options that define the overall look of your prompt. You probably don't want to
      # change them.
      typeset -g POWERLEVEL9K_BACKGROUND=                            # transparent background
      typeset -g POWERLEVEL9K_{LEFT,RIGHT}_{LEFT,RIGHT}_WHITESPACE= # no surrounding whitespace
      typeset -g POWERLEVEL9K_{LEFT,RIGHT}_SUBSEGMENT_SEPARATOR=' '  # separate segments with a space
      typeset -g POWERLEVEL9K_{LEFT,RIGHT}_SEGMENT_SEPARATOR=        # no end-of-line symbol

      # When set to true, icons appear before content on both sides of the prompt
      typeset -g POWERLEVEL9K_ICON_BEFORE_CONTENT=true

      # Add a space between the prompt and the cursor
      typeset -g POWERLEVEL9K_PROMPT_ADD_NEWLINE=true

      # Defines character set used by powerlevel10k. It's best to let `p10k configure` set it for you.
      typeset -g POWERLEVEL9K_MODE=nerdfont-complete

      # Hot reload allows you to change POWERLEVEL9K options after Powerlevel10k has been initialized.
      # For example, you can type POWERLEVEL9K_BACKGROUND=red and see your prompt turn red. Hot reload
      # can slow down prompt by 1-2 milliseconds, so it's better to keep it turned off unless you
      # really need it.
      typeset -g POWERLEVEL9K_DISABLE_HOT_RELOAD=true

      # If p10k is already loaded, reload configuration.
      # This works even with POWERLEVEL9K_DISABLE_HOT_RELOAD=true.
      (( ! $+functions[p10k] )) || p10k reload
    }

    # Tell p10k configure which file it should overwrite.
    typeset -g POWERLEVEL9K_CONFIG_FILE=''${ZDOTDIR}/.p10k.zsh

    (( ''${#p10k_config_opts} )) && setopt ''${p10k_config_opts[@]}
    'builtin' 'unset' 'p10k_config_opts'
  '';
}
