name: Test

on:
  pull_request:
    branches: [ main ]

jobs:
  check-commit:
    runs-on: ubuntu-latest
    outputs:
      should_test: ${{ steps.check.outputs.should_test }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - id: check
        run: |
          commit_msg=$(git log -1 --pretty=%B)
          if [[ "$commit_msg" =~ ^(feat|fix|docs|style|refactor|perf|test|chore|ci|revert)(\([a-zA-Z0-9-]+\))?!?: ]]; then
            echo "should_test=true" >> $GITHUB_OUTPUT
          else
            echo "should_test=false" >> $GITHUB_OUTPUT
          fi

  pre-commit:
    needs: check-commit
    if: needs.check-commit.outputs.should_test == 'true'
    name: Pre-commit checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Setup Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Install pre-commit
        run: nix-shell -p pre-commit nixpkgs-fmt --run "pre-commit install"

      - name: Fix file formatting
        run: |
          nix-shell -p pre-commit nixpkgs-fmt --run "pre-commit run trailing-whitespace --all-files || true"
          nix-shell -p pre-commit nixpkgs-fmt --run "pre-commit run end-of-file-fixer --all-files || true"
          nix-shell -p pre-commit nixpkgs-fmt --run "pre-commit run nixpkgs-fmt --all-files || true"

          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add -A
          git commit -m "style: fix formatting" || true

      - name: Run pre-commit checks
        run: |
          SKIP=no-commit-to-branch nix-shell -p pre-commit nixpkgs-fmt --run "pre-commit run --all-files"

  build:
    needs: [check-commit, pre-commit]
    if: needs.check-commit.outputs.should_test == 'true'
    name: Test on ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: aarch64-linux
            name: Ubuntu (ARM64)
          - os: ubuntu-latest
            platform: x86_64-linux
            name: Ubuntu (x86_64)
          - os: macos-latest
            platform: aarch64-darwin
            name: macOS (Apple Silicon)
          - os: macos-latest
            platform: x86_64-darwin
            name: macOS (Intel)
        #   - os: windows-latest
        #     platform: x86_64-windows
        #     name: Windows (x86_64)

    steps:
    - uses: actions/checkout@v4

    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@main

    - name: Setup Nix Cache
      uses: DeterminateSystems/magic-nix-cache-action@main

    - name: Test flake builds
      env:
        NIX_USER: runner
        USER: runner
        USERNAME: runner
        LOGNAME: runner
        HOST: ${{ matrix.os }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        chmod +x ./install.sh
        ./install.sh install
