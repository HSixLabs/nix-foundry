name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        go: ['1.21']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go }}

    - name: Install dependencies
      run: go mod download

    - name: Run tests
      run: go test -v ./...

    - name: Run linter
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest

  validate-docs:
    name: Validate Documentation
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install dependencies
      run: go mod download

    - name: Generate docs
      run: |
        # Generate docs in a temporary directory
        mkdir -p /tmp/docs
        cp -r docs/* /tmp/docs/
        go run scripts/gendocs.go

        # Compare generated docs with committed docs
        if ! diff -r docs/ /tmp/docs/; then
          echo "Error: Generated docs differ from committed docs."
          echo "Please run 'go run scripts/gendocs.go' locally and commit the changes."
          exit 1
        fi

  release:
    name: Create Release
    needs: [test, validate-docs]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build binaries
      run: |
        GOOS=linux GOARCH=amd64 go build -o nix-foundry-linux-amd64
        GOOS=darwin GOARCH=amd64 go build -o nix-foundry-darwin-amd64
        GOOS=darwin GOARCH=arm64 go build -o nix-foundry-darwin-arm64

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          nix-foundry-linux-amd64
          nix-foundry-darwin-amd64
          nix-foundry-darwin-arm64
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  beta:
    name: Create Beta Release
    needs: [test, validate-docs]
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Generate beta version
      id: beta_version
      run: |
        echo "version=beta-pr-${{ github.event.pull_request.number }}-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: Build binaries
      run: |
        GOOS=linux GOARCH=amd64 go build -o nix-foundry-linux-amd64
        GOOS=darwin GOARCH=amd64 go build -o nix-foundry-darwin-amd64
        GOOS=darwin GOARCH=arm64 go build -o nix-foundry-darwin-arm64

    - name: Create Beta Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          nix-foundry-linux-amd64
          nix-foundry-darwin-amd64
          nix-foundry-darwin-arm64
        tag_name: ${{ steps.beta_version.outputs.version }}
        name: Beta Release - PR #${{ github.event.pull_request.number }}
        body: |
          Beta release for PR #${{ github.event.pull_request.number }}
          ${{ github.event.pull_request.title }}
        draft: false
        prerelease: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
