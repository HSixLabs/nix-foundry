name: Release

on:
  workflow_run:
    workflows: ['CI']
    types:
      - completed
    branches: [main, 'feat/*', 'fix/*', 'perf/*', 'refactor/*']

jobs:
  release:
    name: Release
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Release
        id: semantic-release
        uses: cycjimmy/semantic-release-action@v4
        with:
          semantic_version: 23.0.2
          extra_plugins: |
            @semantic-release/changelog@6.0.3
            @semantic-release/git@10.0.1
            @semantic-release/exec@6.0.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment PR
        if: steps.semantic-release.outputs.new_release_published == 'true' && github.event.workflow_run.event == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const prNumber = context.payload.workflow_run.pull_requests[0].number;
            const version = '${{ steps.semantic-release.outputs.new_release_version }}';

            const comment = `ðŸŽ‰ Beta release ${version} has been published!

            You can test this release by running:
            \`\`\`bash
            curl -L https://github.com/${owner}/${repo}/releases/download/v${version}/nix-foundry-$(uname -s | tr '[:upper:]' '[:lower:]')-$(uname -m) -o nix-foundry
            chmod +x nix-foundry
            ./nix-foundry --version
            \`\`\`

            [View Release](https://github.com/${owner}/${repo}/releases/tag/v${version})`;

            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: prNumber,
              body: comment
            });
