name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest tag
        id: get_latest_tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "latest_tag=${latest_tag}" >> $GITHUB_OUTPUT

      - name: Determine version bump
        id: version_bump
        run: |
          if git rev-parse "v0.0.0" >/dev/null 2>&1; then
            commits=$(git log ${{ steps.get_latest_tag.outputs.latest_tag }}..HEAD --pretty=format:"%s")
          else
            commits=$(git log --pretty=format:"%s")
          fi

          bump_type="patch"

          while IFS= read -r commit; do
            if [[ "$commit" =~ ^feat[(!):] ]]; then
              bump_type="minor"
            elif [[ "$commit" =~ ^BREAKING[ -]CHANGE: || "$commit" =~ ^[a-z]+!: ]]; then
              bump_type="major"
              break
            fi
          done <<< "$commits"

          current_version=${latest_tag#v}
          IFS='.' read -r major minor patch <<< "$current_version"

          case $bump_type in
            major)
              new_version="$((major + 1)).0.0"
              ;;
            minor)
              new_version="${major}.$((minor + 1)).0"
              ;;
            patch)
              new_version="${major}.${minor}.$((patch + 1))"
              ;;
          esac

          echo "new_version=v${new_version}" >> $GITHUB_OUTPUT
          echo "version_type=${bump_type}" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          configuration: ".github/changelog-config.json"
          fromTag: ${{ steps.get_latest_tag.outputs.latest_tag }}
          toTag: ${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version_bump.outputs.new_version }}
          name: Release ${{ steps.version_bump.outputs.new_version }}
          body: |
            ## Version Type: ${{ steps.version_bump.outputs.version_type }}

            ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
